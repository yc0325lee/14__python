d.clear() ● ● ● Remove all items
d.__contains__(k) ● ● ● k in d
d.copy() ● ● ● Shallow copy
d.__copy__() ● Support for copy.copy(d)
d.default_factory ● Callable invoked by __missing__
to set missing valuesa
d.__delitem__(k) ● ● ● del d[k]—remove item with
key k
d.fromkeys(it, [ini
tial])
● ● ● New mapping from keys in iterable,
with optional initial value (defaults
to None)
d.get(k, [default]) ● ● ● Get item with key k, return
default or None if missing
d.__getitem__(k) ● ● ● d[k]—get item with key k
d.items() ● ● ● Get view over items—(key, 
value) pairs
d.__iter__() ● ● ● Get iterator over keys
d.keys() ● ● ● Get view over keys
d.__len__() ● ● ● len(d)—number of items
d.__missing__(k) ● Called when __getitem__ cannot
find the key
d.move_to_end(k, 
[last])
● Move k first or last position (last is
True by default)
d.__or__(other) ● ● ● Support for d1 | d2 to create new
dict merging d1 and d2 (Python
≥ 3.9)
d.__ior__(other) ● ● ● Support for d1 |= d2 to update
d1 with d2 (Python ≥ 3.9)
d.pop(k, [default]) ● ● ● Remove and return value at k, or
default or None if missing
d.popitem() ● ● ● Remove and return the last inserted
item as (key, value) b
d.__reversed__() ● ● ● Support for reverse(d)—returns
iterator for keys from last to first
inserted.
d.__ror__(other) ● ● ● Support for other | dd—
reversed union operator (Python ≥
3.9)c
